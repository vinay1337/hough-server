[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core>=2.0.0,<3.0.0"]

[dependency-groups]
dev = [
  "mypy (>=1.18.2,<2.0.0)",
  "pre-commit (>=4.3.0,<5.0.0)",
]

[project]
authors = [
  {email = "vjanard@gmail.com", name = "Vinay Janardhanam"},
]
dependencies = [
]
description = ""
name = "hough-server"
readme = "README.md"
requires-python = ">=3.11"
version = "0.1.0"

[tool.mypy]
check_untyped_defs = true # Still type‑check bodies of functions without annotations
disallow_untyped_calls = false # Allow calls to un-annotated functions for now
disallow_untyped_defs = false # Don't require every function/method to have full annotations for now
enable_error_code = ["redundant-expr", "truthy-bool", "truthy-function", "unreachable"] # Extra lints: dead code, truthiness mistakes, etc.
explicit_package_bases = true # Each package root must have an __init__.py (no implicit namespace pkgs)
follow_imports = "normal" # Type‑check project modules; use stubs-only mode for external libs
ignore_missing_imports = true # Do not complain when a dependency has no type stubs for now
mypy_path = "$MYPY_CONFIG_FILE_DIR/stubs" # Additional search path for local .pyi stub files
platform = "linux" # Pretend we’re running on Linux for platform‑specific narrowing
python_version = "3.11" # Use Python 3.11 features and stdlib typing
show_column_numbers = true # Include column numbers in error output
show_error_codes = true # Append codes like [arg-type] to messages
strict_optional = true # `None` only fits `Optional[...]` (no implicit nullability)
warn_no_return = true # Warn if a non‑None function might exit without `return`
warn_redundant_casts = true # Flag casts that don’t actually change the type
warn_return_any = true # Warn when a function annotated to return concrete type can return `Any`
warn_unused_ignores = true # Tell you when `# type: ignore` is no longer necessary

[tool.ruff]
line-length = 120
output-format = "grouped"
target-version = "py311"

[tool.ruff.format]
indent-style = "space"
line-ending = "lf"
quote-style = "double"

[tool.ruff.lint]
ignore = [
  "B007", # Allow unused loop variables without leading underscore
  "B008", # Allow function calls in argument defaults (used in FastAPI)
  "B019", # Allow lru_cache on methods
  "D10", # Allow missing docstrings
  "D200", # Allow one-line docstrings that don't fit on one line
  "D202", # Allow blank lines after function docstring
  "D4", # Ignore pedantic docstring rules
  "E501", # Ignore line length violations
  "E741", # Allow ambiguous variable names
  "UP038", # Don't require X | Y instead of (X, Y) in isinstance
]
select = ["B", "D", "E", "F", "I", "UP"]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"] # Ignore unused import in __init__.py files

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.tomlsort]
all = true
ignore_case = true
in_place = true
trailing_comma_inline_array = true
overrides."tool.poetry.dependencies".first = ["python"]
